#+TITLE: kchan's Emacs config

This org file is an index automatically generated from init.el.
Links in the file are clickable on GitHub and bring you to the
source code.  The more non-trivial parts of my config are marked
with ⭐, which I think some people may find interesting. Have
fun!

* Table of Contents :TOC:
- [[#preamble][Preamble]]
- [[#bootstrap-straightel][Bootstrap straight.el]]
- [[#util-functions][Util functions]]
- [[#misc-config][Misc config]]
  - [[#package-which-key][Package which-key]]
- [[#-mode-line][⭐ Mode line]]
- [[#in-buffer-completion-company][In buffer completion (company)]]
  - [[#package-company][Package company]]
- [[#generic-stripes][Generic stripes]]
  - [[#package-hl-line][Package hl-line]]
- [[#-theme][⭐ Theme]]
  - [[#font-inventory][Font Inventory]]
  - [[#color-palette][Color palette]]
  - [[#face-inventory][Face inventory]]
  - [[#misc-settings][Misc settings]]
  - [[#generate-faces][Generate faces]]
  - [[#gui-tweeks][GUI tweeks]]
- [[#-per-window-echo-area][⭐ Per window echo area]]
- [[#-message-to-per-window-echo-area][⭐ Message to per window echo area]]
- [[#time][Time]]
- [[#appearances][Appearances]]
- [[#indent-and-whitespace][Indent and whitespace]]
- [[#general-programming-utilities][General Programming Utilities]]
  - [[#package-flycheck][Package flycheck]]
- [[#tex][TeX]]
  - [[#package-tex][Package tex]]
- [[#-completion-system][⭐ Completion system]]
  - [[#package-vertico][Package vertico]]
  - [[#package-vertico-buffer][Package vertico-buffer]]
  - [[#package-marginalia][Package marginalia]]
  - [[#package-embark][Package embark]]
- [[#exwm][EXWM]]
  - [[#package-exwm][Package exwm]]
- [[#misc-key-bindings][Misc key bindings]]
  - [[#more-efficient-bindings-for-keyboard-macro][More efficient bindings for keyboard macro]]
  - [[#disable-input-method-optionspace-hot-key-on-macos][Disable input method (option+space) hot key on macOS]]
- [[#lisp-development][Lisp development]]
  - [[#package-emacs][Package emacs]]
  - [[#package-macrostep][Package macrostep]]
  - [[#package-comment-or-uncomment-sexp][Package comment-or-uncomment-sexp]]
  - [[#package-paxedit][Package paxedit]]
  - [[#package-slime][Package slime]]
  - [[#package-slime-repl-sync-switch-to-slime-repl-and-synchronize-packagedirectory][Package slime-repl-sync: Switch to Slime REPL and synchronize package/directory.]]

* [[file:init.el#L5][Preamble]]

 Turn off GC during startup

 Reset some variables, so that hot loading via eval-buffer/load-file has more faithful behavior.

 Misc libraries

* [[file:init.el#L22][Bootstrap straight.el]]

* [[file:init.el#L44][Util functions]]
  - Package [[file:init.el#L46][alist]], [[file:init.el#L48][s]]
  - Macro [[file:init.el#L50][globalize]]: Define a global minor mode from MODE, and add to `emacs-startup-hook'.
  - Function [[file:init.el#L60][k-guix-p]]
  - Macro [[file:init.el#L63][k-use-guix-maybe]]
  - Function [[file:init.el#L69][delete-from-list]]
  - Macro [[file:init.el#L72][with-advice]]: Temporarily add ADVICE to SYMBOL during evaluation of BODY.
  - Function [[file:init.el#L80][k-run-helper-command]]: Run helper shell COMMAND in buffer with NAME.
    Run CONTINUATION once the shell process exited.
    If SILENT is non-nil, do not display the NAME buffer.
  - Function [[file:init.el#L101][k-global-set-key]]: Bind KEY to COMMAND, also works in EXWM windows.
  - Function [[file:init.el#L107][k-fill-right]]: Prepend a variable space to STRING to make it right-aligned.
  - Function [[file:init.el#L115][k-insert-fill-right]]: Insert STRING and make it right-aligned using a variable space.
    This is more correct than (insert (k-fill-right STRING)) in some
    cases, because it respect the current buffer settings,
    e.g. invisibility spec.
  - Function [[file:init.el#L132][k-truncate-string-to-width]]: Truncate STRING to PIXEL-WIDTH.
    Use binary search.
  - Function [[file:init.el#L148][k-ensure-prefix-map]]

* [[file:init.el#L152][Misc config]]
  - Package [[file:init.el#L181][vlf]]

** Package [[file:init.el#L185][which-key]]
 Make `which-key' popup use k-echo-area
* [[file:init.el#L206][⭐ Mode line]]
  - Function [[file:init.el#L208][k-pad-mode-line-format]]: Format the mode line as a string according to FORMAT and RIGHT-FORMAT.
    FORMAT is left-aligned and RIGHT-FORMAT is right-aligned.  Add
    padding space at the left and right of the mode line so that the
    edge of the mode line align with left and right fringe.
  - Function [[file:init.el#L231][k-set-selected-window]], [[file:init.el#L235][k-mode-line-selected-p]]
  - Function [[file:init.el#L266][k-pad-header-line-after-advice]]: Add padding to header line using `k-pad-mode-line-format'.
    This is intended to be used as an :after advice or (normal or
    abnormal) hook.  If OBJECT is not given, pad header line for
    current buffer.  If OBJECT is a buffer, pad header line for it.
    If OBJECT is a frame, pad header line for all buffers displayed
    in it.  The function should be idempotent and suitable for
    repeated invocation.
  - Function [[file:init.el#L289][k-compute-tab-line]]: Add an empty tab line to windows in FRAME to simulate bottom dividers.
    Tab lines are not added to windows at the top and windows whose
    buffer has non-nill `k-inhibit-tab-line'.

    This differs from bottom dividers because it does not add space
    below window at the bottom (above echo area).
  - Package [[file:init.el#L305][package]]

* [[file:init.el#L309][In buffer completion (company)]]

** Package [[file:init.el#L313][company]]

 Zebra strips, to look consistent with vertico Patch `company--create-lines' and `company-fill-propertize'
  - Function [[file:init.el#L323][company--create-lines]], [[file:init.el#L455][company-fill-propertize]]

 ⭐ Don't let `company-elisp' quickhelp hijack `*Help*' buffer
  - Advice [[file:init.el#L540][company-capf]], [[file:init.el#L545][help-buffer]]
 Use posframe so that company works in minibuffer
  - Package [[file:init.el#L552][company-posframe]]

* [[file:init.el#L566][Generic stripes]]
 I prefer using text-property to color stuff, but when I don't feel like trying I use `stripes' overlays.
  - Package [[file:init.el#L570][stripes]]

** Package [[file:init.el#L574][hl-line]]
 Patch `hl-line-make-overlay' so that front advance is T
  - Function [[file:init.el#L578][hl-line-make-overlay]]
* [[file:init.el#L584][⭐ Theme]]
 I generate theme algorithmically from a list of hue and saturation values. There're two hand-tune ones accessible using `k-theme-switch', and my EMMS integration generate themes from YouTube video thumbnail when it is played.

** [[file:init.el#L595][Font Inventory]]
  - Function [[file:init.el#L597][k-set-fonts]]

 Tweek fonts to  match `window-text-pixel-size'

** [[file:init.el#L622][Color palette]]
  - Function [[file:init.el#L643][k-hsl-to-hex]]
  - Function [[file:init.el#L646][k-generate-theme]]: Algorithmically generate and load theme.
    HUE-1 and SAT-1 is used for `k-*-blue',
    HUE-2 and SAT-2 is used for `k-*-purple',
    HUE-3 and SAT-3 is used for `k-*-pink'.
    CONTRAST is the hue used for `k-fg-red'.
    DARK-P specifies whether to generate a dark or light theme.

** [[file:init.el#L724][Face inventory]]

** [[file:init.el#L737][Misc settings]]

** [[file:init.el#L741][Generate faces]]
  - Function [[file:init.el#L742][k-load-faces]]: Generate and set faces.
  - Function [[file:init.el#L1178][k-theme-switch]]: Elegantly switch to k-theme with STYLE.

** [[file:init.el#L1188][GUI tweeks]]

 Try not to let underline touch the text.  We use underline to draw a horizontal separator below header line, and this make it look better.

* [[file:init.el#L1215][⭐ Per window echo area]]
 This displays "pseudo" echo areas under each window.  I find it more comfy to look at than the global echo area.  I also hacked `vertico-buffer' to display vertico menu in this area, which appears *above* the main window's mode line.

 The implementation is a mega-hack: we split a echo area window under the main window, set the main window's `mode-line-format' window parameter to `none', and copy its actual mode line to the echo area window, so that the echo area window appears to be above main window's mode line.
  - Function [[file:init.el#L1231][k-echo-area-window]]: Return the k-echo-area window for WINDOW.
  - Function [[file:init.el#L1239][k-echo-area-main-window]]: Return the window whose k-echo-area is WINDOW.
  - Function [[file:init.el#L1278][k-echo-area-display]]: Display BUF in a k-echo-area window created for MAIN-WINDOW.
  - Function [[file:init.el#L1306][k-echo-area-clear]]: Remove the k-echo-area window for MAIN-WINDOW.
  - Function [[file:init.el#L1314][k-echo-area-clear-1]]: Remove the k-echo-area window.
  - Function [[file:init.el#L1325][k-echo-area-clear-all]]: Remove all k-echo-area window, for debug purpose only.

* [[file:init.el#L1333][⭐ Message to per window echo area]]
  - Function [[file:init.el#L1339][k-message]]: Like `message' but in k-echo-area.
    Format FORMAT-STRING with ARGS.
  - Function [[file:init.el#L1348][k-message-display]]: Refresh display of `k-message' for current buffer.

 Use `k-message' for `eldoc'. Pretty comfy!

* [[file:init.el#L1379][Time]]
  - Package [[file:init.el#L1381][time]]

* [[file:init.el#L1386][Appearances]]
  - Package [[file:init.el#L1388][all-the-icons]], [[file:init.el#L1396][volatile-highlights]], [[file:init.el#L1400][highlight-indent-guides]], [[file:init.el#L1408][highlight-parentheses]], [[file:init.el#L1415][topsy]], [[file:init.el#L1423][outline]]

* [[file:init.el#L1429][Indent and whitespace]]
  - Package [[file:init.el#L1431][dtrt-indent]], [[file:init.el#L1436][ws-butler]], [[file:init.el#L1439][snap-indent]]

* [[file:init.el#L1445][General Programming Utilities]]

** Package [[file:init.el#L1447][flycheck]]
  - Function [[file:init.el#L1453][k-flycheck-display-error-messages]]
  - Package [[file:init.el#L1463][lsp-mode]]

* [[file:init.el#L1470][TeX]]
  - Package [[file:init.el#L1472][lsp-ltex]]

** Package [[file:init.el#L1478][tex]]
 to use pdfview with auctex

 to have the buffer refresh after compilation
  - Function [[file:init.el#L1497][init-latex]]
  - Package [[file:init.el#L1509][cdlatex]]

* [[file:init.el#L1513][⭐ Completion system]]

** Package [[file:init.el#L1517][vertico]]

 Multiline candidates

 Don't collapse multiline into single line. I find this reads much better for, say, `yank-pop'

 Patch `read-from-kill-ring' so that it doesn't collapse entries to single line
  - Function [[file:init.el#L1535][read-from-kill-ring]]: Read a `kill-ring' entry using completion and minibuffer history.
    PROMPT is a string to prompt with.

 Patch `vertico--truncate-multiline'
  - Function [[file:init.el#L1585][vertico--truncate-multiline]]: Truncate multiline CAND.
    Ignore MAX-WIDTH, use `k-vertico-multiline-max-lines' instead.
  - Function [[file:init.el#L1597][k-string-pixel-height]]: Return the width of STRING in pixels.

 Patch `vertico--compute-scroll'
  - Function [[file:init.el#L1614][vertico--compute-scroll]]: Update scroll position.

 Zebra strips, for better visualization of multiline candidates

 Patch `vertico--display-candidates'
  - Function [[file:init.el#L1629][vertico--display-candidates]]: Update candidates overlay `vertico--candidates-ov' with LINES.
** Package [[file:init.el#L1642][vertico-buffer]]

 we use `fit-window-to-buffer' instead and ignore HEIGHT
  - Function [[file:init.el#L1650][vertico--resize-window]]

 Customize vertico prompt
  - Function [[file:init.el#L1662][vertico--format-count]]: Format the count string.

 Vertico insert echo messages into its input line.  Without any patch, such echo message masks `k-echo-area--top-separator-overlay', breaking our horizontal rule drawn by overline.  The following resolves this.
  - Function [[file:init.el#L1678][k-minibuffer-message-advice]]

 Make `vertico-buffer' use k-echo-area
  - Function [[file:init.el#L1686][vertico--setup]]
** Package [[file:init.el#L1723][marginalia]]
 Automatically give more generous field width
  - Function [[file:init.el#L1728][marginalia--affixate]]: Affixate CANDS given METADATA and Marginalia ANNOTATOR.
  - Package [[file:init.el#L1750][orderless]], [[file:init.el#L1763][consult]]

** Package [[file:init.el#L1778][embark]]
  - Function [[file:init.el#L1793][k-grep-in-1]]: Grep in current embark target.
  - Function [[file:init.el#L1797][k-grep-in]]: Grep in FILENAME.
  - Package [[file:init.el#L1805][embark-consult]]

* [[file:init.el#L1807][EXWM]]
  - Package [[file:init.el#L1809][exwm-randr]]

** Package [[file:init.el#L1816][exwm]]
  - Function [[file:init.el#L1822][k-exwm-update-title]]

* [[file:init.el#L1829][Misc key bindings]]

** [[file:init.el#L1879][More efficient bindings for keyboard macro]]
  - Package [[file:init.el#L1880][kmacro]], [[file:init.el#L1885][comment-dwim-2]], [[file:init.el#L1888][crux]]

** [[file:init.el#L1895][Disable input method (option+space) hot key on macOS]]
  - Function [[file:init.el#L1897][k-ns-toggle-input-method-shortcut]], [[file:init.el#L1904][k-ns-focus-change-function]]

* [[file:init.el#L1909][Lisp development]]

** Package [[file:init.el#L1911][emacs]]
  - Function [[file:init.el#L1926][k-info-rename-buffer]]: Rename info buffer according to current node.
  - Advice [[file:init.el#L1930][eval-last-sexp]]

** Package [[file:init.el#L1937][macrostep]]
 To fix the outdated naming in (define-minor-mode macrostep-mode ...) TODO: Remove once upstream fix this.
** Package [[file:init.el#L1945][comment-or-uncomment-sexp]]
 #+nil structural comment for Common Lisp
  - Macro [[file:init.el#L1952][advance-save-excursion]], [[file:init.el#L1958][structured-comment-maybe]]
  - Function [[file:init.el#L1978][structured-comment-advice]]
  - Function [[file:init.el#L1983][structured-comment-defun]]: Use #+nil to comment a top-level form for Common Lisp.
  - Package [[file:init.el#L1996][paredit]]

** Package [[file:init.el#L2005][paxedit]]
  - Function [[file:init.el#L2013][paxedit-copy-1]], [[file:init.el#L2023][paxedit-kill-1]]
  - Advice [[file:init.el#L2048][eval-last-sexp]]

** Package [[file:init.el#L2052][slime]]
  - Advice [[file:init.el#L2069][slime-load-contribs]], [[file:init.el#L2072][slime-eval-last-expression]]

 Handy slime commands and key bindings
  - Function [[file:init.el#L2083][ensure-slime]]
  - Function [[file:init.el#L2089][slime-undefine]]: Undefine toplevel definition at point.

 *slime-scratch*
  - Function [[file:init.el#L2108][switch-to-scratch]]: Switch to scratch buffer.

 Slime mode line
  - Function [[file:init.el#L2116][slime-mode-line]]

 Hacks to make slime-autodoc works better

 Enable Paredit and Company in Lisp related minibuffers
  - Function [[file:init.el#L2125][k-slime-command-p]], [[file:init.el#L2130][sexp-minibuffer-hook]]

 Slime debug window non-prolifiration
** Package [[  - Function [[file:init.el#L2152][slime-repl-sync]]: Switch to Slime REPL and synchronize package/directory.
